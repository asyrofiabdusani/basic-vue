.vue -> custom format to describe a portion of UI
.vue ->
<template></template> -> template Html of ui
<script></script> -> js script block
<style></style> -> css block

* binding text
1. must task syntax with using double callibraces
2. using v-text

* binding Html
1. using v-html -> must carefully using this, since it will execute all the html syntax in

* binding attributes -> to binding attributes in the HTML such as id, boolean, etc
1. using v-bind:[attribute]='name'

* binding inline style
1. using v-bind:style='{[style]}'
2. for binding with array, last style has higher priority

* shorthand v-bind
1. delete v-bind, example :
complete v-bind : 
  <h2 v-bind:style="headerStyle">Binding style</h2>
shorthand:
  <h2 :style="headerStyle">Binding style</h2>

* conditional rendering
v-if
v-else-if
v-else

<template></template> -> is using to wrap some elements but the wrapper is hide

v-show -> make the display to none when the conditional is false

* List rendering
v-for directive
array of Object
array of string
array of array
block html elements
Object key value pairs

syntax :
v-for='(var, index) in arr' :key='index'

every v-for must has key to prevent the error for every data in itterate
key must be unique

form
modifier : 
1. v-model.trim -> trim input
2. v-model.number -> change input as number
3. v-model.lazy -> the input will be change lazy, not on time
4. preventDefault -> ignore refresh when click submit. It also can be used as @submit.prevent
5. @keyup.[button] -> event for keyboard 

v-once -> make the element can't be changed
v-pre -> make double callibraces show as it

* computed properties
properties that can be bound like data properties
composing new data from existing sources
computed properties only call when event executes, method will execute when there is changhed in the screen

watcher
allow to watch any data or computed property and execute some code in response to change in the value

watcher vs computed
use computed for :
1. need to compose new data from existing data sources
2. need to reduce length variable

use watcher for :
1. check if propertyhas changed value to know the perform
2. call the api in response to change in application data
3. handler make watcher run in the first load time
4. deep make the watcher access object in array

